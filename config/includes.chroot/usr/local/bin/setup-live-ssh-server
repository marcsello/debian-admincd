#!/bin/bash

## Part of the Debian AdminCD project

set -e

function fail {
	echo "$@"
	exit 1
}

function print_help {
        echo "Debian AdminCD SSH server setup script"
	echo
	echo "Params:"
	echo "-q              Do not print connection details when the script finishes"
	echo "-m              Do not append connection details to /etc/motd"
	echo "-k URL          Download and install SSH public key from URL"
	echo "-p PASSOWRD     Use PASSWORD instead of a generated one"
	echo "-P              Do not configure root password (login only via key)"
	echo "-S              Do not start/restart the systemd service (have to restart manually)"
	echo "-h/--help       This help"
	echo
}

while [ $# -ne 0 ]; do

    arg="$1"
    case "$arg" in
        -q)
            QUIET="yes"
            ;;
        -m)
            NO_MOTD="yes"
            ;;
        -k)
            SSH_KEY_URL="$2"
            shift # shift out param as well
            ;;
        -h|--help)
            print_help
            exit 0
            ;;
        -p)
            ROOT_PASSWD="$2"
            shift
            ;;
        -P)
            NO_PASSWD_CONFIG="yes"
            ;;
        -S)
            NO_SYSTEMD="yes"
            ;;
        *)
            print_help
            fail "Unknown option: $arg"
    esac
    shift # pop an arg

done



# Check if ssh server already installed
for f in /etc/ssh/sshd_config /lib/systemd/system/ssh.service /usr/sbin/sshd; do

	test -f "$f" && fail "SSH Server seems to be already configured"

done

# prevent SSH server from starting just after install
[[ -z "${NO_SYSTEMD}" ]] && touch /etc/ssh/sshd_not_to_be_run || true


if [[ -z "${NO_PASSWD_CONFIG}" ]]; then
	# For some reason "false" means "Yes, do allow root login please"...
	# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=745778
	# https://www.debian.org/releases/jessie/amd64/release-notes/ch-information.en.html#openssh
	debconf-set-selections <<< 'd-i openssh-server/permit-root-login boolean false'
	debconf-set-selections <<< 'd-i openssh-server/password-authentication boolean true'
else
	debconf-set-selections <<< 'd-i openssh-server/password-authentication boolean false'
fi

# Install openssh server and it's dependencies
dpkg -i /var/cache/openssh-server-pkgs/*.deb


if [[ -z "${NO_PASSWD_CONFIG}" ]]; then
	# generate and set root password

	if [[ -z "${ROOT_PASSWD}" ]]; then
		ROOT_PASSWD=$(pwgen -B 9 1)
	fi

	echo "root:${ROOT_PASSWD}" | chpasswd
fi

# Download SSH key if specified
if [[ -n "${SSH_KEY_URL}" ]]; then

	mkdir -p /root/.ssh
	wget -O /root/.ssh/authorized_keys "${SSH_KEY_URL}"
	chmod 400 /root/.ssh/authorized_keys

fi


# Update motd

function print_connection_details {

	echo -e "\033[1m[SSH server enabled!]\033[0m"

	echo "User: root"
	[[ -z "${NO_PASSWD_CONFIG}" ]] && echo "Password: ${ROOT_PASSWD}" || true
	[[ -n "${SSH_KEY_URL}" ]] && echo "SSH key added from ${SSH_KEY_URL}" || true # otherwise the script would fail because set -e

}


if [[ -z "${NO_MOTD}" ]]; then
	(echo; print_connection_details; echo) >> /etc/motd
fi

if [[ -z "${QUIET}" ]]; then
	# Print the same info
	print_connection_details
fi

if [[ -z "${NO_SYSTEMD}" ]]; then
	# Start the ssh server
	rm /etc/ssh/sshd_not_to_be_run
	systemctl start ssh.service
fi
