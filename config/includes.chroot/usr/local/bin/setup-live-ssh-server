#!/bin/bash

## Part of the Debian AdminCD project

set -e

function fail {
	echo "$@"
	exit 1
}

function print_help {
        echo "Debian AdminCD SSH server setup script"
	echo
	echo "Params:"
        echo -e "-q\tDo not print connection details when the script finishes"
	echo -e "-M\tDo not append connection details to /etc/motd"
	echo -e "-k URL\tDownload and install SSH public key from URL"
	echo -e "-h\tThis help"
	echo
}

while [ $# -ne 0 ]; do

    arg="$1"
    case "$arg" in
        -q)
            QUIET="yes"
            ;;
        -M)
            NO_MOTD="yes"
            ;;
        -k)
            SSH_KEY_URL="$2"
            shift # shift out param as well
            ;;
        -h|--help)
            print_help
            exit 0
            ;;
        *)
            print_help
            fail "Unknown option: $arg"
    esac
    shift # pop an arg

done



# Check if ssh server already installed
for f in /etc/ssh/sshd_config /lib/systemd/system/ssh.service /usr/sbin/sshd; do

	test -f "$f" && fail "SSH Server seems to be already configured"

done

# prevent SSH server from starting just after install
touch /etc/ssh/sshd_not_to_be_run


# For some reason "false" means "Yes, do allow root login please"...
# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=745778
# https://www.debian.org/releases/jessie/amd64/release-notes/ch-information.en.html#openssh
debconf-set-selections <<< 'd-i openssh-server/permit-root-login boolean false'

# Install openssh server and it's dependencies
dpkg -i /var/cache/openssh-server-pkgs/*.deb

# generate and set root password
ROOT_PASSWD=$(pwgen -B 9 1)
echo "root:${ROOT_PASSWD}" | chpasswd

# Download SSH key if specified
if [[ -n "${SSH_KEY_URL}" ]]; then

	mkdir -p /root/.ssh
	wget -O /root/.ssh/authorized_keys "${SSH_KEY_URL}"
	chmod 400 /root/.ssh/authorized_keys

fi


# Update motd

function print_connection_details {

	tput bold
	echo "[SSH server enabled!]"
	tput sgr0
	echo "User: root"
	echo "Password: ${ROOT_PASSWD}"
	[[ -n "${SSH_KEY_URL}" ]] && echo "SSH key added from ${SSH_KEY_URL}" || true # otherwise the script would fail because set -e

}


if [[ -z "${NO_MOTD}" ]]; then
	(echo; print_connection_details; echo) >> /etc/motd
fi

# Print the same info
if [[ -z "${QUIET}" ]]; then
	print_connection_details
fi

# Start the ssh server
rm /etc/ssh/sshd_not_to_be_run
systemctl start ssh.service
